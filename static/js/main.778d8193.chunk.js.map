{"version":3,"sources":["Components/ItemCard.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["ItemCard","props","Card","CardMedia","component","height","image","data","name","alt","CardContent","Typography","variant","color","email","website","CardActions","style","justifyContent","Button","onClick","onHandleLike","id","like","onHandleClick","Main","React","loading","setLoading","user","setUser","value","newArray","filter","ele","map","axios","get","then","response","resData","item","catch","error","console","log","justifyItems","textAlign","Stack","alignItems","CircularProgress","length","Box","sx","flexGrow","Grid","container","spacing","xs","md","index","sm","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAQe,SAASA,EAASC,GAC/B,OACI,8BACF,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CACIC,UAAU,MACVC,OAAO,MACPC,MAAK,oDAA+CL,EAAMM,KAAKC,KAA1D,8BACLC,IAAKR,EAAMM,KAAKC,OAElB,cAACE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACF,cAAC,IAAD,IADE,IACaZ,EAAMM,KAAKC,KAAK,uBAC/B,cAAC,IAAD,IAFE,IAEcP,EAAMM,KAAKO,MAAM,uBACjC,cAAC,IAAD,IAHE,IAGWb,EAAMM,KAAKQ,aAGxB,eAACC,EAAA,EAAD,CAAaC,MAAO,CAACC,eAAe,UAApC,UACA,cAACC,EAAA,EAAD,CAAQF,MAAO,CAACJ,MAAM,OAAQO,QAAS,kBAAMnB,EAAMoB,aAAapB,EAAMM,KAAKe,KAA3E,SAAiFrB,EAAMM,KAAKgB,KAC5F,cAAC,IAAD,IAAc,cAAC,IAAD,MAEd,eAACJ,EAAA,EAAD,CAAQC,QAAS,kBAAMnB,EAAMuB,cAAcvB,EAAMM,KAAKe,KAAtD,cAA4D,cAAC,IAAD,IAA5D,e,sBCrBS,SAASG,EAAKxB,GAAQ,IAAD,EACHyB,YAAe,GADZ,mBACzBC,EADyB,KACjBC,EADiB,OAETF,WAAe,IAFN,mBAEzBG,EAFyB,KAEpBC,EAFoB,KAqBpC,SAASN,EAAcO,GACnB,IAAMC,EAAWH,EAAKI,QAAO,SAAAC,GAAG,OAC5BA,EAAIZ,KAAOS,KACfD,EAAQE,GAGZ,SAASX,EAAaU,GAClB,IAAMC,EAAWH,EAAKM,KAAI,SAAAD,GAItB,OAHGA,EAAIZ,KAAOS,IACVG,EAAIX,MAAQW,EAAIX,MAEbW,KAEXJ,EAAQE,GAGV,OAjCEN,aAAgB,WACZE,GAAW,GACXQ,IAAMC,IAAN,8CACCC,MAAK,SAAAC,GACF,IAAIC,EAAUD,EAAShC,KACvBiC,EAAUA,EAAQL,KAAI,SAAAM,GAEpB,OADAA,EAAKlB,MAAO,EACLkB,KAETX,EAAQU,GACRZ,GAAW,MAEdc,OAAM,SAAAC,GACHC,QAAQC,IAAI,QAAQF,QAE1B,IAmBF,gCACI,oBAAI1B,MAAO,CAACC,eAAe,SAAS4B,aAAa,SAASC,UAAU,UAApE,yBAEIpB,EACA,cAACqB,EAAA,EAAD,CAAOC,WAAW,SAAlB,SACA,cAACC,EAAA,EAAD,MAGArB,EAAKsB,OACL,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAtC,SACG9B,EAAKM,KAAI,SAACM,EAAMmB,GAAP,OACR,cAACL,EAAA,EAAD,CAAMd,MAAI,EAACiB,GAAI,GAAIG,GAAI,EAAGF,GAAI,EAA9B,SACM,cAAC3D,EAAD,CAAUO,KAAMkC,EAAMjB,cAAeA,EAAeH,aAAgBA,KADpCuC,UAM1C,oBAAI3C,MAAO,CAAC8B,UAAU,UAAtB,oCCvDGe,MANf,WACE,OACE,cAACrC,EAAD,KCOWsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.778d8193.chunk.js","sourcesContent":["import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActions } from '@mui/material';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport { FaEnvelope, FaGlobe, FaHeart, FaRegHeart, FaTrashAlt, FaUserAlt } from \"react-icons/fa\";\n\nexport default function ItemCard(props) {\n  return (\n      <div>\n    <Card>\n    <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={`https://avatars.dicebear.com/v2/avataaars/${props.data.name}.svg?options[mood][]=happy`}\n        alt={props.data.name}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n      <FaUserAlt /> {props.data.name}<br/>\n      <FaEnvelope /> {props.data.email}<br />\n      <FaGlobe /> {props.data.website}\n      </Typography>\n      </CardContent>\n      <CardActions style={{justifyContent:'center'}}>\n      <Button style={{color:'red'}} onClick={() => props.onHandleLike(props.data.id)}>{props.data.like ? \n      <FaHeart/>  : <FaRegHeart /> }\n      </Button>\n      <Button onClick={() => props.onHandleClick(props.data.id)}> <FaTrashAlt /> </Button>\n      </CardActions>\n    </Card>\n    </div>\n  );\n}\n\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport axios from 'axios';\nimport ItemCard from './ItemCard';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Stack } from '@mui/material';\n\nexport default function Main(props) {\n    const [loading,setLoading] = React.useState(false)\n    const [user,setUser] = React.useState([])\n\n    React.useEffect(() => {\n        setLoading(true)\n        axios.get(`https://jsonplaceholder.typicode.com/users`)\n        .then(response =>{\n            var resData = response.data\n            resData = resData.map(item =>{\n              item.like = false\n              return item\n            })\n            setUser(resData)\n            setLoading(false)\n        })\n        .catch(error =>{\n            console.log('ERROR',error)\n        })\n    },[])\n\nfunction onHandleClick(value){\n    const newArray = user.filter(ele => \n        ele.id !== value)\n    setUser(newArray)\n}\n\nfunction onHandleLike(value){\n    const newArray = user.map(ele =>{\n        if(ele.id === value){\n            ele.like = !ele.like\n        }\n        return ele\n    })\n    setUser(newArray);\n}\n\n  return (\n    <div>\n        <h2 style={{justifyContent:'center',justifyItems:'center',textAlign:'center'}}>Contact App</h2>\n        {\n            loading ? \n            <Stack alignItems=\"center\">\n            <CircularProgress/>\n            </Stack>\n            :\n            user.length ?\n            <Box sx={{ flexGrow: 1 }}>\n            <Grid container spacing={{ xs: 2, md: 3 }}>\n              {user.map((item, index) => (\n                <Grid item xs={12} sm={4} md={4} key={index} >\n                      <ItemCard data={item} onHandleClick={onHandleClick} onHandleLike = {onHandleLike}/>              \n                </Grid>\n              ))}\n            </Grid>\n          </Box> \n          : <h3 style={{textAlign:'center'}}> No Data To Display</h3>\n        }\n    </div>\n  );\n}\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}